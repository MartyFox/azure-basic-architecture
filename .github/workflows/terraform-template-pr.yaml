name: pr workflow - tf plan
 
on:
  workflow_call:
    inputs:
      backend_tfstate_name:
        required: true
        type: string
      environment:
        required: true
        type: string
      working_directory:
        required: true
        type: string
      tfstate_container:
        required: true
        type: string
    secrets:
      CLIENT_ID:
        required: true
      CLIENT_SECRET:
        required: true
      SUBSCRIPTION_ID:
        required: true
      TENANT_ID:
        required: true
      BACKEND_TF_RG:
        required: true
      BACKEND_TF_SA:
        required: true
 
 
jobs:
  plan-terraform:
    name: terraform-${{ inputs.environment }}-deploy
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}
    
    steps:
      - uses: actions/checkout@v2
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.3
          terraform_wrapper: false
 
      - name: Run terraform format check
        id: fmt
        run: terraform fmt -check -diff -recursive

      - name: Terraform Init
        id: init
        env:
          ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
        run: terraform init -backend-config="resource_group_name=${{ secrets.BACKEND_TF_RG }}" -backend-config="storage_account_name=${{ secrets.BACKEND_TF_SA }}" -backend-config="container_name=${{ inputs.tfstate_container }}" -backend-config="key=${{ inputs.backend_tfstate_name }}.tfstate"

      - name: Run terraform validate check
        id: validate
        run: terraform validate

      - name: Terraform Plan  
        id: plan
        continue-on-error: false
        if: github.event_name == 'pull_request'
        env:
          ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
        run: terraform plan -no-color -input=false -var-file="../environments/${{ inputs.environment }}.tfvars"

      - name: Add Plan to PR
        id: comment
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
        
            <details><summary>Show Plan</summary>
            
            \`\`\`${process.env.PLAN}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
